services:
  database:
    image: ankane/pgvector
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_PORT: ${DATABASE_PORT}
    volumes:
      - dx:/var/lib/postgresql
    ports:
      - ${DATABASE_PUBLIC_PORT}:${DATABASE_PORT}
    networks:
      - app

  actions:
    image: actions
    build: actions
    restart: always
    ports:
      - 9000:80
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER:  ${DATABASE_USER}
      DATABASE_DB:  ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      OLLAMA_HOST: ${OLLAMA_HOST}
    depends_on:
      - database
    networks:
      - app
    

  graphql:
    image: hasura/graphql-engine:v2.40.0.cli-migrations-v3
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
      - ./hasura/seeds:/hasura-seeds
    ports:
      - ${GRAPQHL_PORT}:8080
    depends_on:
      - database
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${GRAPQHL_SECRET}
    networks:
      - app


networks:
  app:

volumes:
  dx:
  ollama:
