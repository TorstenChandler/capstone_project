version: "3.8"
services:
  database:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    volumes:
      - database:/var/lib/postgresql
    ports:
      - $POSTGRES_PORT:5432
    networks:
      - app

  actions:
    image: actions
    build: actions
    restart: always
    ports:
      - 9000:80
    depends_on:
      - database
    networks:
      - app

  graphql:
    image: hasura/graphql-engine:v2.40.0.cli-migrations-v3
    ports:
      - ${HASURA_PORT}:8080
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
    depends_on:
      - database
    networks:
      - app
    volumes:
      - ./hasura/metadata:/hasura-metadata
      - ./hasura/migrations:/hasura-migrations
    
networks:
  app:

volumes:
  database: {}